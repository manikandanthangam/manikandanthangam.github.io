{"version":3,"sources":["components/header/header.jsx","components/login/login.jsx","components/signup/signup.jsx","components/dummy/dummy1.jsx","components/dummy/dummy.jsx","components/main/main.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","href","Component","Login","id","type","action","htmlFor","name","value","onClick","SubmitLoginFun","React","Signup","alert","htmlhtmlFor","SignupSubmitFun","Dummy1","props","console","log","this","Dummy","Main","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.536d198b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header>\r\n                <nav className=\"navbar navbar-expand-sm bg-light navbar-light\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            {/* <a className=\"nav-link\" href=\"/Login\">Login</a> */}\r\n                            <Link to={'/Login'} className=\"nav-link\">Login</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/Signup\">Signup</a>\r\n                        </li>\r\n                        <li className='nav-item'>\r\n                            <Link to={'/Dummy'} className='nav-link'>Dummy</Link>\r\n                        </li>\r\n\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './login.css';\r\n\r\nclass Login extends React.Component {\r\n    /*SubmitLoginFun() {\r\n        var LoginEmail = $.trim($(\"#email\").val());\r\n        var LoginPassword = $.trim($(\"#password\").val());\r\n        $(\".row .feedback\").removeClass(\"alert-danger\");\r\n        $(\".row .feedback\").text(\"\").hide();\r\n        if(LoginEmail == \"\"){\r\n            $(\"#email\").parent().find(\".feedback\").text(\"Email is required\").show();\r\n            $(\"#email\").parent().find(\".feedback\").addClass(\"alert-danger\");\r\n            $(\"#email\").focus();\r\n            return false;\r\n        } else if(!isEmail(LoginEmail)){\r\n            $(\"#email\").parent().find(\".feedback\").text(\"Email is invalid\").show();\r\n            $(\"#email\").parent().find(\".feedback\").addClass(\"alert-danger\");\r\n            $(\"#email\").focus();\r\n            return false;\r\n        } else if(LoginPassword == \"\"){\r\n            $(\"#password\").parent().find(\".feedback\").text(\"Password is required\").show();\r\n            $(\"#password\").parent().find(\".feedback\").addClass(\"alert-danger\");\r\n            $(\"#password\").focus();\r\n            return false;\r\n        } else {\r\n            // #(\"#LoginForm\").submit();\r\n        }\r\n    \r\n    }\r\n    \r\n    isEmail(email) {\r\n      var regex = /^([a-zA-Z0-9_.+-])+\\@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\r\n      return regex.test(email);\r\n    }*/\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\" id=\"LoginContainer\">\r\n        <form className=\"FormContainer\" id=\"LoginForm\" type=\"POST\" action=\"\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"form-group\"><h3 className=\"form-title\">Sign In</h3></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label className=\"\" htmlFor=\"email\"><i className=\"fas fa-envelope\"></i> Email</label>\r\n                        <input type=\"text\" name=\"email\" id=\"email\" className=\"form-control\" />\r\n                        <div className=\"feedback\"></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label className=\"\" htmlFor=\"password\"><i className=\"fas fa-key\"></i> Password</label>\r\n                        <input type=\"password\" name=\"password\" id=\"password\" className=\"form-control\" />\r\n                        <div className=\"feedback\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"form-group SubmitBtnContainer\">\r\n                        <input type=\"button\" name=\"LoginSubmitBtn\" id=\"LoginSubmitBtn\" className=\"btn btn-primary\" value=\"Submit\" onClick={() => this.SubmitLoginFun()} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport './signup.css';\r\n\r\nclass Signup extends Component {\r\n    showThisAlert(){\r\n        alert('Show This Alert');\r\n    }\r\n    showArrowFunAlert(){\r\n        alert('Show Arrow Function Alert');\r\n    }\r\n\r\n    SignupSubmitFun(){\r\n        // /*var FirstName   = $.trim($(\"#first_name\").val());\r\n        // var LastName    = $.trim($(\"#last_name\").val());\r\n        // var Email       = $.trim($(\"#email\").val());\r\n        // var Phone       = $.trim($(\"#phone_number\").val());\r\n        // var Password    = $.trim($(\"#password\").val());\r\n        // var ConfirmPassword = $.trim($(\"#confirm_password\").val());\r\n    \r\n        \r\n        // $(\".row .feedback\").removeClass(\"alert-danger\");\r\n        // $(\".row .feedback\").text(\"\").hide();\r\n        // if(FirstName == \"\"){\r\n        //     $(\"#first_name\").parent().find(\".feedback\").text(\"First name is required\").show();\r\n        //     $(\"#first_name\").parent().find(\".feedback\").addClass(\"alert-danger\");\r\n        //     $(\"#first_name\").focus();\r\n        //     return false;\r\n        // } else if(LastName == \"\"){\r\n        //     $(\"#last_name\").parent().find(\".feedback\").text(\"Last name is required\").show();\r\n        //     $(\"#last_name\").parent().find(\".feedback\").addClass(\"alert-danger\");\r\n        //     $(\"#last_name\").focus();\r\n        //     return false;\r\n        // } else if(Email == \"\"){\r\n        //     $(\"#email\").parent().find(\".feedback\").text(\"Email is required\").show();\r\n        //     $(\"#email\").parent().find(\".feedback\").addClass(\"alert-danger\");\r\n        //     $(\"#email\").focus();\r\n        //     return false;\r\n        // } else if(!isEmail(Email)){\r\n        //     $(\"#email\").parent().find(\".feedback\").text(\"Email is invalid\").show();\r\n        //     $(\"#email\").parent().find(\".feedback\").addClass(\"alert-danger\");\r\n        //     $(\"#email\").focus();\r\n        //     return false;\r\n        // } else if(Phone == \"\"){\r\n        //     $(\"#phone_number\").parent().find(\".feedback\").text(\"Phone is required\").show();\r\n        //     $(\"#phone_number\").parent().find(\".feedback\").addClass(\"alert-danger\");\r\n        //     $(\"#phone_number\").focus();\r\n        //     return false;\r\n        // } else if(Password == \"\"){\r\n        //     $(\"#password\").parent().find(\".feedback\").text(\"Password is required\").show();\r\n        //     $(\"#password\").parent().find(\".feedback\").addClass(\"alert-danger\");\r\n        //     $(\"#password\").focus();\r\n        //     return false;\r\n        // }  else if(ConfirmPassword == \"\"){\r\n        //     $(\"#confirm_password\").parent().find(\".feedback\").text(\"Confirm password is required\").show();\r\n        //     $(\"#confirm_password\").parent().find(\".feedback\").addClass(\"alert-danger\");\r\n        //     $(\"#confirm_password\").focus();\r\n        //     return false;\r\n        // }  else if(Password != ConfirmPassword){\r\n        //     $(\"#confirm_password\").parent().find(\".feedback\").text(\"Password and Confirm password should be same\").show();\r\n        //     $(\"#confirm_password\").parent().find(\".feedback\").addClass(\"alert-danger\");\r\n        //     $(\"#confirm_password\").focus();\r\n        //     return false;\r\n        // } else {\r\n        //     // #(\"#SignupForm\").submit();\r\n        // }\r\n        // */\r\n    }\r\n    \r\n    // isEmail(email) {\r\n    //   var regex = /^([a-zA-Z0-9_.+-])+\\@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\r\n    //   return regex.test(email);\r\n    // }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\" id=\"SignupContainer\">\r\n        <form className=\"FormContainer\" id=\"SignupForm\" type=\"POST\" action=\"\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"form-group\"><h3 className=\"form-title\">Signup</h3></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label className=\"\" htmlhtmlFor=\"first_name\"><i className=\"fas fa-id-badge\"></i> First name</label>\r\n                        <input type=\"text\" name=\"first_name\" id=\"first_name\" className=\"form-control\" />\r\n                        <div className=\"feedback\"></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label className=\"\" htmlFor=\"last_name\"><i className=\"fas fa-id-badge\"></i> Last name</label>\r\n                        <input type=\"text\" name=\"last_name\" id=\"last_name\" className=\"form-control\" />\r\n                        <div className=\"feedback\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label className=\"\" htmlFor=\"email\"><i className=\"fas fa-envelope\"></i> Email</label>\r\n                        <input type=\"text\" name=\"email\" id=\"email\" className=\"form-control\" />\r\n                        <div className=\"feedback\"></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label className=\"\" htmlFor=\"phone_number\"><i className=\"fas fa-mobile-alt\"></i> Phone number</label>\r\n                        <input type=\"telephone\" name=\"phone_number\" id=\"phone_number\" className=\"form-control\" />\r\n                        <div className=\"feedback\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label className=\"\" htmlFor=\"password\"><i className=\"fas fa-key\"></i> Password</label>\r\n                        <input type=\"password\" name=\"password\" id=\"password\" className=\"form-control\" />\r\n                        <div className=\"feedback\"></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label className=\"\" htmlFor=\"confirm_password\"><i className=\"fas fa-key\"></i> Confirm password</label>\r\n                        <input type=\"password\" name=\"confirm_password\" id=\"confirm_password\" className=\"form-control\" />\r\n                        <div className=\"feedback\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"form-group SubmitBtnContainer\">\r\n                        <input type=\"button\" name=\"SignupSubmitBtn\" id=\"SignupSubmitBtn\" className=\"btn btn-primary\" value=\"Submit\" onClick={()=>this.SignupSubmitFun()} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Signup;\r\n","import React, { Component } from 'react';\r\n\r\nclass Dummy1 extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        console.log(this.props.name);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <p>Dummy 1 {this.props.name} page</p>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dummy1;","import React, { Component } from 'react';\r\nimport Dummy1 from './dummy1';\r\nclass Dummy extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>Dummy page</p>\r\n                <Dummy1 name=\"hello\"></Dummy1>\r\n                <Dummy1 name=\"hnfgn\"></Dummy1>\r\n\r\n                <Dummy1 name=\"hegbfgllo\"></Dummy1>\r\n\r\n                <Dummy1 name=\"gg\"></Dummy1>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dummy;","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Login from '../login/login';\r\nimport Signup from '../signup/signup';\r\nimport Dummy from '../dummy/dummy';\r\n\r\nclass Main extends Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route path='/Login' component={Login}></Route>\r\n                <Route path='/Signup' component={Signup}></Route>\r\n               <Route path='/Dummy' component={Dummy}></Route>\r\n            </Switch>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import logo from './logo.svg';\nimport './App.css';\n// import Login from './components/login/login';\n// import Signup from './components/signup/signup';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './components/header/header';\nimport Main from './components/main/main';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        {/* <p>hi</p> */}\n        {/* <Login></Login> */}\n        {/* <Signup></Signup> */}\n        <Header></Header>\n        <Main></Main>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}